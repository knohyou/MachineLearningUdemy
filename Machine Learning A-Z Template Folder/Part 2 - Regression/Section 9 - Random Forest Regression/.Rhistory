dataset = read.csv('Position_Salaries.csv')
dataset
setwd("C:/Users/knohy/Projects/Coding/MachineLearning/Udemy/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression")
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset
dataset = dataset[2:3]
dataset
library(caTools)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 1)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
regressor = lm(Salary ~ Level)
# Fitting to Linear Regression
regressor = lm(forumulat = Salary ~ Level,
data = dataset)
View(regressor)
summary(regressor)
y_pred = predict(regressor, new_data = 6.5)
y_pred
View(dataset)
regressor = lm(forumula = Salary ~ Level,
data = dataset)
summary(regressor)
y_pred = predict(regressor, new_data = 6.5)
regressor_poly = lm(formula = Salary ~ poly(Level, degree = 2))
regressor_poly = lm(formula = Salary ~ poly(Level, degree = 2),
data = dataset)
summary(regressor_poly)
regressor_poly = lm(formula = Salary ~ poly(Level, degree = 1),
data = dataset)
summary(regressor_poly)
regressor = lm(forumula = Salary ~ Level,
data = dataset)
summary(regressor)
regressor_poly = lm(formula = Salary ~ poly(Level, degree = 2),
data = dataset)
summary(regressor_poly)
regressor_poly = lm(formula = Salary ~ poly(Level, degree = 3),
data = dataset)
summary(regressor_poly)
regressor_poly = lm(formula = Salary ~ poly(Level, degree = 4),
data = dataset)
summary(regressor_poly)
dataset$Level2 = dataset$Level^2
View(dataset)
dataset$Level2 = dataset$Level^2
regressor_poly = lm(formula = Salary ~ .,
data = dataset)
summary(regressor_poly)
library(ggplot2)
ggplot() +
geom_point(aes(x = 'Level',y='Salary'))
library(ggplot2)
ggplot() +
geom_point(aes(x = 'Level',y='Salary'), data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = regressor))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor)))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, dataset$Level)))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset[1:2])))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset$Level)))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggtitle('Truth or Bluff (Linear Regresssion') +
xlab('Levels') +
ylab('Salary')
regressor = lm(forumula = Salary ~ Level,
data = dataset)
summary(regressor)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggtitle('Truth or Bluff (Linear Regresssion') +
xlab('Levels') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
regressor = lm(forumula = Salary ~ Level,
data = dataset)
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
source('C:/Users/knohy/Projects/Coding/MachineLearning/Udemy/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression/polynomial_regression.R', echo=TRUE)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
regressor = lm(forumula = Salary ~ .
data = dataset)
regressor = lm(forumula = Salary ~ .,
data = dataset)
regressor = lm(forumula = Salary ~ Level,
data = dataset)
regressor = lm(forumula = Salary ~ Level,
data = dataset)
summary(regressor)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
View(dataset)
library(ggplot2)
ggplot() +
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)))
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset))) +
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
y = predict(regressor, newdata = dataset)))
y = predict(regressor, newdata = dataset))
y = predict(regressor, newdata = dataset)
y
regressor = lm(forumula = Salary ~ Level,
data = dataset)
regressor = lm(formula = Salary ~ Level,
data = dataset)
summary(regressor)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary)) +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset))) +
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)), colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
y_pred = predict(regressor, 6.5)
dataset$Level2 = dataset$Level^2
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)), colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
dataset$Level2 = dataset$Level^2
dataset$Level3= dataset$Level^3
regressor_poly = lm(formula = Salary ~ .,
data = dataset)
#regressor_poly = lm(formula = Salary ~ poly(Level, degree = 4),
#                    data = dataset)
summary(regressor_poly)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor_poly, newdata = dataset)), colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
dataset$Level2 = dataset$Level^2
dataset$Level3= dataset$Level^3
dataset$Level3= dataset$Level^4
regressor_poly = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor_poly, newdata = dataset)), colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
data.frame(Level = 6.5)
y_pred = predict(regressor, data.frame(Level = 6.5))
y_pred = predict(regressor_poly, data.frame(Level = 6.5, Level2 = 6.5, Level3 = 6.5, Level4 =6.5))
y_pred_lin = predict(regressor, data.frame(Level = 6.5))
y_pred_poly = predict(regressor_poly, data.frame(Level = 6.5, Level2 = 6.5, Level3 = 6.5, Level4 =6.5))
y_pred_poly = predict(regressor_poly, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 =6.5^4))
y_pred_lin = predict(regressor, data.frame(Level = 6.5))
ggplot() +
geom_point(aes(x = dataset$Level, y=dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor_poly, newdata = dataset)), colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regresssion)') +
xlab('Levels') +
ylab('Salary')
y_pred_poly = predict(regressor_poly, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 =6.5^4))
dataset$Level2 = dataset$Level^2
dataset$Level3= dataset$Level^3
dataset$Level3= dataset$Level^4
regressor_poly = lm(formula = Salary ~ .,
data = dataset)
summary(regressor_poly)
y_pred_poly = predict(regressor_poly, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 =6.5^4))
y_pred_poly = predict(regressor_poly, data.frame(Level = 6.5,
Level2 = 6.5,
Level3 = 6.5,
Level4 =6.5))
dataset$Level2 = dataset$Level^2
dataset$Level3= dataset$Level^3
dataset$Level4= dataset$Level^4
regressor_poly = lm(formula = Salary ~ .,
data = dataset)
# predit Polynomial Regression
y_pred_poly = predict(regressor_poly, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 =6.5^4))
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
install.packages('e1071')
library(e1071)
regressor = svm(formula = Salary ~ .,
data = dataset)
summary(regressor)
regressor = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial basis')
regressor = svm(formula = Salary ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial')
summary(regressor)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model)') +
xlab('Level') +
ylab('Salary')
setwd("C:/Users/knohy/Projects/Coding/MachineLearning/Udemy/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 8 - Decision Tree Regression")
clc
clear
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
View(dataset)
install.packages('rpart')
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset)
summary(regressor)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
rpart.control(minsplit = 5))
summary(regressor)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
rpart.control(minsplit = 5))
summary(regressor)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
rpart.control(minsplit = 2))
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset,
rpart.control(minsplit = 2))
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 2))
summary(regressor)
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 3))
summary(regressor)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
y_pred
setwd("C:/Users/knohy/Projects/Coding/MachineLearning/Udemy/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 9 - Random Forest Regression")
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
install.packages('randomForest')
library(randomForest)
regressor = randomForest(formula = Salary ~ .,
data = dataset)
summary(regressor)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
set.seed(1234)
regressor = randomForest(formula = Salary ~ .,
data = dataset,
ntree = 5)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(formula = Salary ~ .,
data = dataset,
ntree = 10)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(formula = Salary ~ .,
data = dataset,
ntree = 100)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = randomForest(formula = Salary ~ .,
data = dataset,
ntree = 300)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
